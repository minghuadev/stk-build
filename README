
Fedora chroot
===============

[1] yum install schroot and set /etc/schroot/schroot.conf (copy sid section)

    [stk]
    description=Debian stk (unstable)
    directory=/home/stk/chroot
    users=stk
    groups=stk
    root-groups=root
    aliases=unstable,default


[2] user directory and permission

    create user stk
    
    mkdir /home/stk/chroot
    chmod g+rx /home/stk
    
    -- without chmod, "schroot -c stk" could not chagne to /home/stk/chroot. 
    -- with chmod, it fails at /bin/bash. 


[3] setup chroot files: 

   #yum --downloadonly --downloaddir=/home/stk/chroot reinstall fedora-release
   yum --downloadonly --downloaddir=/home/stk/chroot install fedora-release-21-4
   rpm --root /home/stk/chroot --initdb
   rpm --root /home/stk/chroot -i fedora-release-21-4.noarch.rpm
   yum --installroot=/home/stk/chroot install bash yum
   yum --installroot=/home/stk/chroot install net-tools iputils passwd


[4] fix schroot config: 

[4.1] user id

    run "schroot -c stk" and exit
    in /etc/schroot/default/nssdatabases comment out passwd, group, shadow.
    edit /home/stk/chroot/etc/passwd, group, shadow, for root and stk.

[4.2] system mounts in /etc/fstab

    /proc  /home/stk/chroot/proc  none bind  0 0
    /sys   /home/stk/chroot/sys   none bind  0 0
    /dev   /home/stk/chroot/dev   none bind  0 0
    /tmp   /home/stk/chroot/tmp   none bind  0 0
    /dev/pts   /home/stk/chroot/dev/pts   none bind 0 0
    
    /run   /home/stk/chroot/run   none bind  0 0
    /run/lock   /home/stk/chroot/run/lock   none bind  0 0
    /dev/shm    /home/stk/chroot/dev/shm    none bind  0 0
    #/run/shm    /home/stk/chroot/run/shm    none bind  0 0

[4.3] system file for network

    cp /etc/resolv.conf /home/stk/chroot/etc

[4.4] root password

    run "schroot -c stk" then "su", change root password. 

[4.5] x display

    see https://help.ubuntu.com/community/BasicChroot

    in host, type "export DISPLAY=:0.0", then "xhost +".
    in chroot, type "export DISPLAY=:0.0", then the x commands.

in chroot install xterm and verify it runs well.


[5] dependency packages in chroot

    yum install gcc-c++ autoconf automake libogg-devel libvorbis-devel i
    yum install openal-soft-devel fribidi-devel subversion libcurl-devel 
    yum install cmake irrlicht-devel libbluedevil-devel.x86_64
    yum install git tar make


[6] source code

    http://supertuxkart.sourceforge.net/Source_control

source directory structure

    src/stk-code
    src/stk-assets

check out source 130MB and assets 650MB

    git clone https://github.com/supertuxkart/stk-code.git stk-code
    svn checkout https://svn.code.sf.net/p/supertuxkart/code/stk-assets stk-assets

media 1.5GB meant for artists

    svn checkout https://svn.code.sf.net/p/supertuxkart/code/media/trunk stk-media-repo


[7] build

    http://supertuxkart.sourceforge.net/Build_STK_on_Linux

[7.1] build without bluez for wiiuse

    cd src/stk-code
    mkdir cmake_build
    cd cmake_build
    #cmake .. 
    cmake ..  -DUSE_WIIUSE=0
    make VERBOSE=1 -j2

[7.2] make a debug build

    cmake .. -DCMAKE_BUILD_TYPE=Debug

[7.3] to run

    ./bin/supertuxkart

[7.4] to install to /usr/local

    sudo make install 

[7.5] build for install to /opt/stk

    cmake .. -DCMAKE_INSTALL_PREFIX=/opt/stk


[8] additional drivers

fix X as in [4.5].

[8.1] run command failed

    LIBGL_DEBUG=verbose ./bin/supertuxkart

    libGL: OpenDriver: trying /usr/lib/dri/i965_dri.so
    libGL error: dlopen /usr/lib/dri/i965_dri.so failed
    libGL: OpenDriver: trying /usr/lib/dri/tls/swrast_dri.so

verify with "glxinfo | grep -i direct" and "glxinfo | grep -i opengl". 
see http://forum.freegamedev.net/viewtopic.php?f=17&t=5214 about 
"SuperTuxKart 0.8.1 crashes" by darkness3560

[8.2] install "glx-utils", run "glxgears" it fails the same

    $ rpm -q -f /usr/lib/dri/i965_dri.so
    mesa-dri-drivers-9.2-1.20130919.fc19.i686

install mesa-dri-drivers. glxgers and glxinfo works well.


[9] install to a user account

build with prefix to $HOME/bin under a chroot 

    cmake .. -DCMAKE_INSTALL_PREFIX=$HOME/bin
    make
    make install

outside of the chroot, copy the three kart* files to $HOME/bin, 
and copy the installed ~/bin/bin, ~/bin/share. create ~/bin/lib. 
run "kartfix1" till it copies all lib files. run "kartfix2" 
to have it copy the assets directories. 

run "~/bin/kart" to play.

[10] static build

[10.1] steps for version 0.6

http://supertuxkart.sourceforge.net/How_to_create_the_Linux_package

install autopackage.org apgcc and apg++. download, extract, run make install.

use this to build:

    % sh autogen.sh
    % CC=apgcc CXX=apg++ sh configure
    % make clean all
    % cd src/
    % apg++ -O2 -Wall -Ibullet/src -o supertuxkart *.o -L. -lstatic_ssg \
        /usr/lib/libplibjs.a /usr/lib/libplibsl.a /usr/lib/libplibssg.a \
        /usr/lib/libplibpu.a /usr/lib/libplibfnt.a /usr/lib/libplibsg.a \
        /usr/lib/libplibul.a /usr/lib/libplibssgaux.a \
        -Lbullet/Demos/OpenGL -lbulletopenglsupport -Lbullet/src \
        -lbulletdynamics -lbulletcollision -lbulletmath \
        -Lenet -lenet -lglut -lGL -lSDL -lSDLmain /usr/lib/libalut.a \
        /home/coz/Desktop/Descargados/openal-soft-1.6.372/libopenal.a \
        /usr/lib/libvorbisfile.a /usr/lib/libvorbis.a /usr/lib/libogg.a
    % strip supertuxkart

[10.2] use this command to build from inside cmake_build

    sh CMakeFiles/supertuxkart.dir/link.txt



Ubuntu chroot
===============

https://help.ubuntu.com/community/BasicChroot

[1] Basic chroot create

[1.1] install dchroot and debootstrap packages
[1.2] create /var/chroot folder
[1.3] edit /etc/schroot/schroot.conf to add

    [lucid]
    description=Ubuntu Lucid
    location=/var/chroot
    priority=3
    users=your_username
    groups=sbuild
    root-groups=root

[1.4] install lucid from http://mirror.url.com/ubuntu/

    sudo debootstrap --variant=buildd --arch i386 lucid /var/chroot/ http://mirror.url.com/ubuntu/

[1.5] change to root shell inside the chroot

    sudo chroot /var/chroot

[2] setup

    sudo mount -o bind /proc /var/chroot/proc
    sudo cp /etc/resolv.conf /var/chroot/etc/resolv.conf

[3] graphics

    export DISPLAY=:0.0
    xhost +

[4] graphics with separate display

[4.1] install xhost and xnest package
[4.2] run in one terminal

    Xnest -ac :1

[4.3] run in a separate terminal

    sudo chroot /var/chroot

and inside the chroot start metacity window manager

    export DISPLAY=locahost:1
    metacity &

a complete desktop can be installed with package ubuntu-desktop and 
started by gnome-session command



Ubuntu chroot with debootstrap
================================

https://help.ubuntu.com/community/DebootstrapChroot

edit /etc/schroot/chroot.d/lucid_i386_conf

    [lucid_i386]
    description=Ubuntu 10.04 Lucid for i386
    #use location on hardy and directory on lucid:
    #location=/srv/chroot/lucid_i386
    directory=/srv/chroot/lucid_i386
    #personality=linux32
    root-users=bob
    run-setup-scripts=true
    run-exec-scripts=true
    type=directory

run debootstrap to install. use amd64 for 64bit. 

use schroot -l to check
and use options -c and -u to invoke name and user

file /etc/schroot/mount-defaults contains the default mounts.

inside the chroot install ubuntu-minimal
or use "dpkg-reconfigure locales" to reconfigure locale. 
or install language-pack-en
or run "locale-gen en_US.UTF-8"



Ubuntu chroot with with audio
================================

https://kb8ojh.net/elb/musings/tag/xpra
creating a chroot jail with sound and X11

see PulseAudio FAQ at http://www.freedesktop.org/wiki/Software/PulseAudio/FAQ/

the fstab fragment:

    /proc		/proc		none	rw,bind		0	0
    /sys		/sys		none	rw,bind		0	0
    /tmp		/tmp		none	rw,bind		0	0
    /run/shm	/run/shm	none	rw,bind		0	0
    /home/elb/.pulse	/home/elb/.pulse	none	rw,bind	0	0
    /var/lib/dbus	/var/lib/dbus	none	rw,bind		0	0

config:

    [unsafe-i386]
    type=directory
    directory=/mnt/unsafe
    description=Precise chroot for i386 untrusted binaries
    script-config=unsafe/config
    personality=linux32
    users=elb

use xpera for network buffered x access. 

install packages:

    sudo schroot -c unsafe-i386
    apt-get install libqtgui4 libasound2-plugins libxss1 libxv1 libqtwebkit4
    dpkg -i /tmp/skype-ubuntu-precise_4.2.0.13-1_i386.deb

if dpkg fails run "apt-get install -f" to patch up the dependencies then re-run dpkg. 







